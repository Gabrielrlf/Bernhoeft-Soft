// <auto-generated />
using System;
using Bernhoeft.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bernhoeft.Infra.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Bernhoeft.Domain.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Situation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 12, 21, 18, 26, 33, 796, DateTimeKind.Local).AddTicks(1335),
                            LastUpdate = new DateTime(2022, 12, 21, 18, 26, 33, 798, DateTimeKind.Local).AddTicks(2315),
                            PropertyName = "Humano",
                            Situation = true
                        });
                });

            modelBuilder.Entity("Bernhoeft.Domain.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Situation")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2022, 12, 21, 18, 26, 33, 800, DateTimeKind.Local).AddTicks(817),
                            Description = "Produto 1",
                            LastUpdate = new DateTime(2022, 12, 21, 18, 26, 33, 800, DateTimeKind.Local).AddTicks(828),
                            Price = 10.50m,
                            PropertyName = "Gabriel Fonseca",
                            Situation = true
                        });
                });

            modelBuilder.Entity("Bernhoeft.Domain.Entity.Product", b =>
                {
                    b.HasOne("Bernhoeft.Domain.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
